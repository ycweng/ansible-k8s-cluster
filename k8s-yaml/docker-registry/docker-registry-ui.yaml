---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-registry-ui
  name: docker-registry-ui
  namespace: cps-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: docker-registry-ui
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: docker-registry-ui
    spec:
      containers:
        - env:
            - name: TZ
              value: Asia/Taipei
          image: quiq/docker-registry-ui
          imagePullPolicy: Always
          name: docker-registry-ui
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/config.yml
              name: config
              readOnly: true
              subPath: config.yml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: docker-registry-ui-config
          name: config

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-ui
  namespace: cps-system
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - nodePort: 31616
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: docker-registry-ui
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: docker-registry-ui
  name: docker-registry-ui-config
  namespace: cps-system
data:
  config.yml: |-
    # Listen interface.
    listen_addr: 0.0.0.0:8080
    # Base path of Docker Registry UI.
    base_path: /docker-registry-ui

    # Registry URL with schema and port.
    registry_url: http://10.110.54.80:32767
    # Verify TLS certificate when using https.
    verify_tls: false

    # Docker registry credentials.
    # They need to have a full access to the registry.
    # If token authentication service is enabled, it will be auto-discovered and those credentials
    # will be used to obtain access tokens.
    # When the registry_password_file entry is used, the password can be passed as a docker secret
    # and read from file. This overides the registry_password entry.
    registry_username: user
    registry_password: pass
    # registry_password_file: /run/secrets/registry_password_file

    # Event listener token.
    # The same one should be configured on Docker registry as Authorization Bearer token.
    event_listener_token: token
    # Retention of records to keep.
    event_retention_days: 7

    # Event listener storage.
    event_database_driver: sqlite3
    event_database_location: data/registry_events.db
    # event_database_driver: mysql
    # event_database_location: user:password@tcp(localhost:3306)/docker_events

    # You can disable event deletion on some hosts when you are running docker-registry on master-master or
    # cluster setup to avoid deadlocks or replication break.
    event_deletion_enabled: True

    # Cache refresh interval in minutes.
    # How long to cache repository list and tag counts.
    cache_refresh_interval: 5

    # If users can delete tags. If set to False, then only admins listed below.
    anyone_can_delete: true
    # Users allowed to delete tags.
    # This should be sent via X-WEBAUTH-USER header from your proxy.
    admins: []

    # Debug mode. Affects only templates.
    debug: true

    # How many days to keep tags but also keep the minimal count provided no matter how old.
    purge_tags_keep_days: 7
    purge_tags_keep_count: 5
    # Enable built-in cron to schedule purging tags in server mode.
    # Empty string disables this feature.
    # Example: '25 54 17 * * *' will run it at 17:54:25 daily.
    # Note, the cron schedule format includes seconds! See https://godoc.org/github.com/robfig/cron
    purge_tags_schedule: '0 0 3 * * *'
